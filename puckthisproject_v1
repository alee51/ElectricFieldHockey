Web VPython 3.2


k = 8.99e9
qe = 1.6e-19

ball1 = sphere(pos=vector(0,0,0), radius=2, color=color.cyan)
ball2 = sphere(pos=vector(20,7,0), radius=2, color=color.cyan)
ball3 = sphere(pos=vector(-30,7,0), radius=2, color=color.cyan)
balls = []
balls.append(ball1)
balls.append(ball2)
balls.append(ball3)

rod1 = box(pos=vec(0, -18, 0), length=2, height=6, width=1, color=color.cyan)
rod2 = box(pos=vec(8, 10, 0), length=2, height=6, width=1, color=color.cyan)
rod3 = box(pos=vec(0, 14, 0), length=2, height=6, width=1, color=color.cyan)
rod4 = box(pos=vec(40, 8, 0), length=2, height=6, width=1, color=color.cyan)
rods = []
rods.append(rod1)
rods.append(rod2)
rods.append(rod3)
rods.append(rod4)

n = 100
dx = rod1.height / n
dq = qe / n
Emax = 5.7536e-11

for i in range(-20,20):
    for j in range(-20,20):
        resultantE = vector(0,0,0);
        observe = vector(i*3,j*3,0)
        for charge in balls:
            rx = observe - charge.pos
            Ex = (k * qe * hat(rx)) / (rx.mag**2)
            resultantE = resultantE + Ex
        for rod in rods:
            E = vector(0,0,0)
            #R = vector(0,0,0)
            for a in range(-n/2,n/2):
                # change y or x depending on dividing height or width
                dr =  vector(rod.pos.x, rod.pos.y + a * dx, rod.pos.z)
                if i == 0 and j == 0: 
                    print(dr)
                rx =  observe - dr
                Ex = (k * dq * hat(rx)) / (rx.mag**2)
                E = E + Ex
            resultantE = resultantE + E
        E_hat = hat(resultantE)
        resultantA = arrow(pos=observe, axis=E_hat * 3, color=color.blue, shaftwidth =.6, opacity=resultantE.mag / Emax * 2)
            
def handle_mousedown(evt):
  print("Mouse down at:", scene.mouse.pos)

scene.bind('mousedown', handle_mousedown)


#E_arrow = arrow(pos=observation_pos, axis=r_hat * 2, color=color.red, shaftwidth =.6, opacity=E.mag / max_field)
